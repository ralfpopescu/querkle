import sql from 'mssql';
export declare const sqlTypes: {
    bit: sql.ISqlTypeFactoryWithNoParams;
    bigInt: sql.ISqlTypeFactoryWithNoParams;
    decimal: (precision: any, scale: any) => sql.ISqlTypeWithPrecisionScale;
    float: sql.ISqlTypeFactoryWithNoParams;
    int: sql.ISqlTypeFactoryWithNoParams;
    money: sql.ISqlTypeFactoryWithNoParams;
    numeric: (precision: any, scale: any) => sql.ISqlTypeWithPrecisionScale;
    smallInt: sql.ISqlTypeFactoryWithNoParams;
    smallMoney: sql.ISqlTypeFactoryWithNoParams;
    real: sql.ISqlTypeFactoryWithNoParams;
    tinyInt: sql.ISqlTypeFactoryWithNoParams;
    char: (length: any) => sql.ISqlTypeWithLength;
    nChar: (length: any) => sql.ISqlTypeWithLength;
    text: sql.ISqlTypeFactoryWithNoParams;
    nText: sql.ISqlTypeFactoryWithNoParams;
    varChar: (length: any) => sql.ISqlTypeWithLength;
    nVarChar: (length: any) => sql.ISqlTypeWithLength;
    xml: sql.ISqlTypeFactoryWithNoParams;
    time: (scale: any) => sql.ISqlTypeWithScale;
    date: sql.ISqlTypeFactoryWithNoParams;
    dateTime: sql.ISqlTypeFactoryWithNoParams;
    dateTime2: (scale: any) => sql.ISqlTypeWithScale;
    dateTimeOffset: (scale: any) => sql.ISqlTypeWithScale;
    smallDateTime: sql.ISqlTypeFactoryWithNoParams;
    uniqueIdentifier: sql.ISqlTypeFactoryWithNoParams;
    variant: sql.ISqlTypeFactoryWithNoParams;
    binary: sql.ISqlTypeFactoryWithNoParams;
    varBinary: (length: any) => sql.ISqlTypeWithLength;
    image: sql.ISqlTypeFactoryWithNoParams;
    udt: sql.ISqlTypeFactoryWithNoParams;
    geography: sql.ISqlTypeFactoryWithNoParams;
    geometry: sql.ISqlTypeFactoryWithNoParams;
};
